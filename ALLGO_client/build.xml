<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="ALLGO_ALPHA">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="Android 4.4.2.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/android-sdk-windows/platforms/android-19/android.jar"/>
    </path>
    <path id="Android Dependencies.libraryclasspath">
        <pathelement location="../Library-ListViewAnimations/bin/library-listviewanimations.jar"/>
        <pathelement location="../actionbar_pulltorefresh_library/bin/actionbar_pulltorefresh_library.jar"/>
    </path>
    <path id="Android Private Libraries.libraryclasspath">
        <pathelement location="libs/xUtils-2.4.7.jar"/>
        <pathelement location="../Library-ListViewAnimations/libs/stickylistheaders_lib.jar"/>
        <pathelement location="../Library-ListViewAnimations/libs/nineoldandroids-2.4.0.jar"/>
        <pathelement location="libs/android-support-v4.jar"/>
        <pathelement location="libs/json.jar"/>
    </path>
    <path id="ALLGO_ALPHA.classpath">
        <pathelement location="bin/classes"/>
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="Android Dependencies.libraryclasspath"/>
        <path refid="Android Private Libraries.libraryclasspath"/>
    </path>
    <path id="run.test.test1.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test.test1.bootclasspath"/>
    <path id="run.test.test1（1）.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test.test1（1）.bootclasspath"/>
    <path id="run.test.test2.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test.test2.bootclasspath"/>
    <path id="run.test.test2（1）.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test.test2（1）.bootclasspath"/>
    <path id="run.test.test3（1）.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test.test3（1）.bootclasspath"/>
    <path id="run.test（1）.classpath">
        <path refid="Android 4.4.2.libraryclasspath"/>
        <path refid="ALLGO_ALPHA.classpath"/>
    </path>
    <path id="run.test（1）.bootclasspath"/>
    <target name="init">
        <mkdir dir="bin/classes"/>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="gen">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="gen"/>
            <classpath refid="ALLGO_ALPHA.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="test.test1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test" todir="${junit.output.dir}"/>
            <classpath refid="run.test.test1.classpath"/>
            <bootclasspath>
                <path refid="run.test.test1.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="test.test1（1）">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.test" todir="${junit.output.dir}"/>
            <classpath refid="run.test.test1（1）.classpath"/>
            <bootclasspath>
                <path refid="run.test.test1（1）.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="test.test2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cn.edu.njupt.allgo.test.test" todir="${junit.output.dir}"/>
            <classpath refid="run.test.test2.classpath"/>
            <bootclasspath>
                <path refid="run.test.test2.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="test.test2（1）">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.test" todir="${junit.output.dir}"/>
            <classpath refid="run.test.test2（1）.classpath"/>
            <bootclasspath>
                <path refid="run.test.test2（1）.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="test.test3（1）">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.test" todir="${junit.output.dir}"/>
            <classpath refid="run.test.test3（1）.classpath"/>
            <bootclasspath>
                <path refid="run.test.test3（1）.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="test（1）">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.test" todir="${junit.output.dir}"/>
            <classpath refid="run.test（1）.classpath"/>
            <bootclasspath>
                <path refid="run.test（1）.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
